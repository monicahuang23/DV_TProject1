case
when kpi < "p1" then \\\'03 Low\\\'
when kpi < "p2" then \\\'02 Medium\\\'
else \\\'01 High\\\'
end kpi
from (select color, clarity,
sum(price) as sum_price, sum(carat) as sum_carat,
sum(price) / sum(carat) as kpi
from diamonds
group by color, clarity)
order by clarity;"
')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_Low_Max_value, p2=KPI_Medium_Max_value), verbose = TRUE))); View(df)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='Diamonds Crosstab\nSUM_PRICE, SUM_CARAT, SUM_PRICE / SUM_CARAT') +
labs(x=paste("COLOR"), y=paste("CLARITY")) +
layer(data=df,
mapping=aes(x=COLOR, y=CLARITY, label=SUM_PRICE),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
position=position_identity()
) +
layer(data=df,
mapping=aes(x=COLOR, y=CLARITY, label=SUM_CARAT),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", vjust=2),
position=position_identity()
) +
layer(data=df,
mapping=aes(x=COLOR, y=CLARITY, label=round(RATIO, 2)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", vjust=4),
position=position_identity()
) +
layer(data=df,
mapping=aes(x=COLOR, y=CLARITY, fill=KPI),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
KPI_average = 10000
KPI_great = 1000
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select EMH, DISTRICTNAME, kpi,
case
when kpi < "p1" then \\\'Great\\\'
when kpi < "p2" then \\\'Average\\\'
else \\\'Ok\\\'
end kpi
from (select EMH, DISTRICTNAME, sum(RANK_TOT) as kpi
from FINAL_GRADE
group by EMH, DISTRICTNAME)
order by DISTRICTNAME;"
')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_mh42375', PASS='orcl_mh42375', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_great, p2=KPI_average), verbose = TRUE)));View(df)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='EMH and District Name Crosstab') +
labs(x=paste("DISTRICTNAME"), y=paste("EMH")) +
layer(data=df,
mapping=aes(x=DISTRICTNAME, y=EMH, label=KPI),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
position=position_identity()
) +
layer(data=df,
mapping=aes(x=DISTRICTNAME, y=EMH, fill=KPI.1),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
# The following is equivalent to KPI Story 2 Sheet 2 and Parameters Story 3 in "Crosstabs, KPIs, Barchart.twb"
# These will be made to more resemble Tableau Parameters when we study Shiny.
KPI_Low_Max_value = 4750
KPI_Medium_Max_value = 5000
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select color, clarity, sum_price, round(sum_carat) as sum_carat, kpi as ratio,
case
when kpi < "p1" then \\\'03 Low\\\'
when kpi < "p2" then \\\'02 Medium\\\'
else \\\'01 High\\\'
end kpi
from (select color, clarity,
sum(price) as sum_price, sum(carat) as sum_carat,
sum(price) / sum(carat) as kpi
from diamonds
group by color, clarity)
order by clarity;"
')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_Low_Max_value, p2=KPI_Medium_Max_value), verbose = TRUE))); View(df)
# df <- diamonds %>% group_by(color, clarity) %>% summarize(sum_price = sum(price), sum_carat = sum(carat)) %>% mutate(ratio = sum_price / sum_carat) %>% mutate(kpi = ifelse(ratio <= KPI_Low_Max_value, '03 Low', ifelse(ratio <= KPI_Medium_Max_value, '02 Medium', '01 High'))) %>% rename(COLOR=color, CLARITY=clarity, SUM_PRICE=sum_price, SUM_CARAT=sum_carat, RATIO=ratio, KPI=kpi)
spread(df, COLOR, SUM_PRICE) %>% View
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='Diamonds Crosstab\nSUM_PRICE, SUM_CARAT, SUM_PRICE / SUM_CARAT') +
labs(x=paste("COLOR"), y=paste("CLARITY")) +
layer(data=df,
mapping=aes(x=COLOR, y=CLARITY, label=SUM_PRICE),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
position=position_identity()
) +
layer(data=df,
mapping=aes(x=COLOR, y=CLARITY, label=SUM_CARAT),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", vjust=2),
position=position_identity()
) +
layer(data=df,
mapping=aes(x=COLOR, y=CLARITY, label=round(RATIO, 2)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", vjust=4),
position=position_identity()
) +
layer(data=df,
mapping=aes(x=COLOR, y=CLARITY, fill=KPI),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
KPI_average = 10000
KPI_great = 1000
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select EMH, DISTRICTNAME, kpi,
case
when kpi < "p1" then \\\'Great\\\'
when kpi < "p2" then \\\'Average\\\'
else \\\'Ok\\\'
end kpi
from (select EMH, DISTRICTNAME, sum(RANK_TOT) as kpi
from FINAL_GRADE
group by EMH, DISTRICTNAME)
order by DISTRICTNAME;"
')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_mh42375', PASS='orcl_mh42375', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_great, p2=KPI_average), verbose = TRUE)));View(df)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='EMH and District Name Crosstab') +
labs(x=paste("DISTRICTNAME"), y=paste("EMH")) +
layer(data=df,
mapping=aes(x=DISTRICTNAME, y=EMH, label=KPI),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
position=position_identity()
) +
layer(data=df,
mapping=aes(x=DISTRICTNAME, y=EMH, fill=KPI.1),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
KPI_average = 10000
KPI_great = 1000
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select EMH, DISTRICTNAME, kpi,
case
when kpi < "p1" then \\\'Great\\\'
when kpi < "p2" then \\\'Average\\\'
else \\\'Ok\\\'
end kpi
from (select EMH, DISTRICTNAME, sum(RANK_TOT) as kpi
from FINAL_GRADE
group by EMH, DISTRICTNAME)
order by kpi;"
')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_mh42375', PASS='orcl_mh42375', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_great, p2=KPI_average), verbose = TRUE)));View(df)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='EMH and District Name Crosstab') +
labs(x=paste("DISTRICTNAME"), y=paste("EMH")) +
layer(data=df,
mapping=aes(x=DISTRICTNAME, y=EMH, label=KPI),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
position=position_identity()
) +
layer(data=df,
mapping=aes(x=DISTRICTNAME, y=EMH, fill=KPI.1),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
KPI_average = 10000
KPI_great = 1000
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select EMH, DISTRICTNAME, kpi,
case
when kpi < "p1" then \\\'Great\\\'
when kpi < "p2" then \\\'Average\\\'
else \\\'Ok\\\'
end kpi
from (select EMH, DISTRICTNAME, sum(RANK_TOT) as kpi
from FINAL_GRADE
group by EMH, DISTRICTNAME)
order by DISTRICTNAME;"
')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_mh42375', PASS='orcl_mh42375', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_great, p2=KPI_average), verbose = TRUE)));View(df)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='EMH and District Name Crosstab') +
labs(x=paste("DISTRICTNAME"), y=paste("EMH")) +
layer(data=df,
mapping=aes(x=DISTRICTNAME, y=EMH, label=KPI),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
position=position_identity()
) +
layer(data=df,
mapping=aes(x=DISTRICTNAME, y=EMH, fill=KPI.1),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
KPI_average = 10000
KPI_great = 1000
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select EMH, DISTRICTNAME, kpi,
case
when kpi < "p1" then \\\'Great\\\'
when kpi < "p2" then \\\'Average\\\'
else \\\'Ok\\\'
end kpi
from (select EMH, DISTRICTNAME, sum(RANK_TOT) as kpi
from FINAL_GRADE
group by EMH, DISTRICTNAME)
order by DISTRICTNAME;"
')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_mh42375', PASS='orcl_mh42375', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_great, p2=KPI_average), verbose = TRUE)));View(df)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='EMH and District Name Crosstab') +
labs(x=paste("DISTRICTNAME"), y=paste("EMH")) +
#layer(data=df,
#     mapping=aes(x=DISTRICTNAME, y=EMH, label=KPI),
#    stat="identity",
#   stat_params=list(),
#  geom="text",
# geom_params=list(colour="black"),
#position=position_identity()
) +
layer(data=df,
mapping=aes(x=DISTRICTNAME, y=EMH, fill=KPI.1),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
KPI_average = 10000
KPI_great = 1000
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select EMH, DISTRICTNAME, kpi,
case
when kpi < "p1" then \\\'Great\\\'
when kpi < "p2" then \\\'Average\\\'
else \\\'Ok\\\'
end kpi
from (select EMH, DISTRICTNAME, sum(RANK_TOT) as kpi
from FINAL_GRADE
group by EMH, DISTRICTNAME)
order by DISTRICTNAME;"
')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_mh42375', PASS='orcl_mh42375', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_great, p2=KPI_average), verbose = TRUE)));View(df)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='EMH and District Name Crosstab') +
labs(x=paste("DISTRICTNAME"), y=paste("EMH")) +
#layer(data=df,
#     mapping=aes(x=DISTRICTNAME, y=EMH, label=KPI),
#    stat="identity",
#   stat_params=list(),
#  geom="text",
# geom_params=list(colour="black"),
#position=position_identity()
) +
layer(data=df,
mapping=aes(x=DISTRICTNAME, y=EMH, fill=KPI.1),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
KPI_average = 10000
KPI_great = 1000
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select EMH, DISTRICTNAME, kpi,
case
when kpi < "p1" then \\\'Great\\\'
when kpi < "p2" then \\\'Average\\\'
else \\\'Ok\\\'
end kpi
from (select EMH, DISTRICTNAME, sum(RANK_TOT) as kpi
from FINAL_GRADE
group by EMH, DISTRICTNAME)
order by DISTRICTNAME;"
')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_mh42375', PASS='orcl_mh42375', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_great, p2=KPI_average), verbose = TRUE)));View(df)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='EMH and District Name Crosstab') +
labs(x=paste("DISTRICTNAME"), y=paste("EMH")) +
#layer(data=df,
#     mapping=aes(x=DISTRICTNAME, y=EMH, label=KPI),
#    stat="identity",
#   stat_params=list(),
#  geom="text",
# geom_params=list(colour="black"),
#position=position_identity()
#) +
layer(data=df,
mapping=aes(x=DISTRICTNAME, y=EMH, fill=KPI.1),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
KPI_average = 10000
KPI_great = 1000
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select EMH, DISTRICTNAME, kpi,
case
when kpi < "p1" then \\\'Great\\\'
when kpi < "p2" then \\\'Average\\\'
else \\\'Ok\\\'
end kpi
from (select EMH, DISTRICTNAME, sum(RANK_TOT) as kpi
from FINAL_GRADE
group by EMH, DISTRICTNAME)
order by DISTRICTNAME;"
')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_mh42375', PASS='orcl_mh42375', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_great, p2=KPI_average), verbose = TRUE)));View(df)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='EMH and District Name Crosstab') +
labs(x=paste("DISTRICTNAME"), y=paste("EMH")) +
layer(data=df,
mapping=aes(x=DISTRICTNAME, y=EMH, label=KPI),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
position=position_identity()
) +
layer(data=df,
mapping=aes(x=DISTRICTNAME, y=EMH, fill=KPI.1),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from final_grade"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_mh42375', PASS='orcl_mh42375', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
require(extrafont)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
#facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(title='Graduation Rates & Ranks For Each Plantype') +
labs(x="SPF P's Grad Rate", y=paste("Rank Total")) +
layer(data=df,
mapping=aes(x=as.numeric(as.character(SPF_PS_IND_GRAD_RATE)), y=as.numeric(as.character(RANK_TOT)), color=FINAL_PLANTYPE),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
source('~/DataVisualization/DV_TProject1/03 R SQL Visualisations/Scatter Plot.R')
source('~/DataVisualization/DV_TProject1/03 R SQL Visualisations/Scatter Plot.R')
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from final_grade"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_mh42375', PASS='orcl_mh42375', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
require(extrafont)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
#facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(title='Graduation Rates & Ranks For Each Plantype') +
labs(x="SPF P's Grad Rate", y=paste("Rank Total")) +
layer(data=df,
mapping=aes(x=as.numeric(as.character(SPF_PS_IND_GRAD_RATE)), y=as.numeric(as.character(RANK_TOT)), color=FINAL_PLANTYPE),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
source('~/DataVisualization/DV_TProject1/03 R SQL Visualisations/Scatter Plot.R')
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from final_grade"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_mh42375', PASS='orcl_mh42375', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
require(extrafont)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
#facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(title='Graduation Rates & Ranks For Each Plantype') +
labs(x="SPF P's Grad Rate", y=paste("Rank Total")) +
layer(data=df,
mapping=aes(x=as.numeric(as.character(SPF_PS_IND_GRAD_RATE)), y=as.numeric(as.character(RANK_TOT)), color=FINAL_PLANTYPE),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
source('~/DataVisualization/DV_TProject1/03 R SQL Visualisations/Scatter Plot.R')
source('~/DataVisualization/DV_TProject1/03 R SQL Visualisations/Scatter Plot.R')
source('~/DataVisualization/DV_TProject1/03 R SQL Visualisations/Crosstab.R')
source('~/DataVisualization/DV_TProject1/03 R SQL Visualisations/Crosstab.R')
source("../03 R SQL Visualisations/Crosstab.R")
source('~/DataVisualization/DV_TProject1/03 R SQL Visualisations/Crosstab.R')
source('~/DataVisualization/DV_TProject1/03 R SQL Visualisations/Crosstab_NoLabel.R')
shiny::runApp('~/DataVisualization/RWorkshop/09Shiny')
